Concept Learning with Energy-Based Models Igor Mordatch OpenAI San Francisco, CA mordatch@openai.com Abstract Many hallmarks of human intelligence, such as generalizing from limited experience, abstract reasoning and planning, analogical reasoning, creative problem solving, and capacity for language require the ability to consolidate experience into concepts , which act as basic building blocks of understanding and reasoning. We present a framework that deﬁnes a concept by an energy function over events in the environment, as well as an attention mask over entities participating in the event. Given few demonstration events, our method uses inference-time optimization procedure to generate events involving similar concepts or identify entities involved in the concept. We evaluate our framework on learning visual, quantitative, relational, temporal concepts from demonstration events in an unsupervised manner. Our approach is able to successfully generate and identify concepts in a few-shot setting and resulting learned concepts can be reused across environments. Example videos of our results are available at sites.google.com/site/energyconceptmodels 1 Introduction Many hallmarks of human intelligence, such as generalizing from limited experience, abstract reasoning and planning, analogical reasoning, creative problem solving, and capacity for language and explanation are still lacking in the artiﬁcial intelligent agents. We, as others  believe what enables these abilities is the capacity to consolidate experience into concepts , which act as basic building blocks of understanding and reasoning. Examples of concepts include visual ( "red" or"square" ), spatial ( "inside" ,"on top of" ), temporal ("slow" ,"after" ), social ( "aggressive" ,"helpful" ) among many others . These concepts can be either identiﬁed or generated one can not only ﬁnd a square in the scene, but also create a square, either physical or imaginary. Importantly, humans also have a largely unique ability to combine concepts compositionally ( "red square" ) and recursively ( "move inside moving square" ) abilities reﬂected in the human language. This allows expressing an exponentially large number of concepts, and acquisition of new concepts in terms of others. We believe the operations of identiﬁcation, generation, composition over concepts are the tools with which intelligent agents can understand and communicate existing experiences and reason about new ones. Crucially, these operations must be performed on the ﬂy throughout the agent’s execution, rather than merely being a static product of an ofﬂine training process. Execution-time optimization, as in recent work on meta-learning  plays a key role in this. We pose the problem of parsing experiences into an arrangement of concepts as well as the problems of identifying and generating concepts as optimizations performed during execution lifetime of the agent. The meta-level training is performed by taking into account such processes in the inner level. Speciﬁcally, a concept in our work is deﬁned by an energy function taking as input an event conﬁguration (represented as trajectories of entities in the current work), as well as an attention mask over entities in the event. Zero-energy event and attention conﬁgurations imply that event entities selected by the attention mask satisfy the concept. Compositions of concepts can then be created byarXiv:1811.02486v1  [cs.AI]  6 Nov 2018simply summing energies of constituent concepts. Given a particular event, optimization can be used to identify entities belonging to a concept by solving for attention mask that leads to zero-energy conﬁguration. Similarly, an example of a concept can be generated by optimizing for a zero-energy event conﬁguration. See Figure 1 for examples of these two processes. The energy function deﬁnes a family of concepts, from which a particular concept is selected with a speciﬁc concept code. Encoding of event and attention conﬁgurations can be achieved by executiontime optimization over concept codes. Once an event is encoded, the resulting concept code structure can be used to re-enact the event under different initial conﬁgurations (task of imitation learning), recognize similar events, or concisely communicate the nature of the event. We believe there is a strong link between concept codes and language, but leave it unexplored in this work. At the meta level, the energy function is the only entity that needs to be learned. This is different from generative model or inverse reinforcement learning approaches, which typically also learn an explicit generator/policy function, whereas we deﬁne it implicitly via optimization. Our advantage as that the learned energy function can be reused in other domains, for example using a robot platform to reenact concepts in the physical world. Such transfer is not possible with an explicit generation/policy function, as it is domain-speciﬁc. x 0 a x 1 x 0 a x 1  generation identification  Figure 1: Examples of generation and identiﬁcation processes for a "square" concept. a) Given initial statex0and attention mask a, square consisting of entities in ais formed via optimization over x1. b) Given states x, entities comprising a square are found by optimization over attention mask a. 2 Related Work We draw upon several areas for inspiration in our work, including energy-based models, concept learning, inverse reinforcement learning and meta-learning. Energy-based modelling approaches have a long history in machine learning, commonly used for density modeling . These approaches typically aim to learn a function that assigns low energy values to inputs in the data distribution and high energy values to other inputs. The resulting models can then be used to either discriminate whether or not a query input comes from the data distribution, or to generate new samples from the data distribution. One common choice for sampling procedure is Markov Chain Monte Carlo (MCMC), however it suffers from slow mixing and often requires many iterative steps to generate samples . Another choice is to train a separate network to generate samples . Generative Adversarial Networks  can be thought of as instances of this approach . The key difﬁculty in training energy-based models lies in estimating their partition function, with many approaches relying on the sampling procedure to estimate it or further approximations . Our approach avoids both the slow mixing of MCMC and the need to train a separate network. We use sampling procedure based on gradient of the energy (which mixes much faster than gradient-free MCMC), while training the energy function to have a gradient ﬁeld that produces good samples. The problem of learning and reasoning over concepts or other abstract representations has long been of interest in machine learning (see  for review). Approaches based on Bayesian reasoning have notably been applied for numerical concepts . A recent framework of  focuses on visual concepts such as color and shape, where concepts are deﬁned in terms of distributions over latent variables produced by a variational autoencoder. Instead of focusing solely on visual concepts from pixel input, our work explores learning of concepts that involve complex interaction of multiple entities. Our method aims to learn concepts from demonstration events in the environment. A similar problem is tackled by inverse reinforcement learning (IRL) approaches, which aim to infer an underlying cost 2function that gives rise to demonstrated events. Our method’s concept energy functions are analogous to the cost or negative of value functions recovered by IRL approaches. Under this view, multiple concepts can easily be composed simply by summing their energy functions. Concepts are then enacted in our approach via energy minimization, mirroring the application a forward reinforcement learning step in IRL methods. Max entropy  is a common IRL formulation, and our method closely resembles recent instantiations of it . Our method relies on performing inference-time optimization processes for concept generation and identiﬁcation, as well as for determining which concepts are involved in an event. The training is performed by taking behavior of these inner optimization processes into account, similar to the meta-learning formulations of . Relatedly, iterative processes have been explored in the context of control  and image generation . 3 Energy-Based Concept Models Concepts operate over events, which in this work is a trajectory of Tstates x= x0;:::;xT . Each state contains a collection of Nentities xt= [x0;:::;xN]and each entity xt ican contain information such as position and color of the entity. Considering entire trajectories and entities allows us to model temporal or relational concepts, unlike work that focuses on visual concepts . Attention over entities in the event is speciﬁed by a mask a2RNover each of the entities. Existence of a particular concept is given by energy function E(x;a;w)2R+, where parameter vector wspeciﬁes a particular concept from a family. The interpretation of wis similar to that of a code in an autoencoder. E(x;a;w) = 0 when state trajectory xunder attention mask aover entities satisﬁes the concept w. Otherwise, E(x;a;w)>0. The conditional probabilities of a particular event conﬁguration belonging to a concept and a particular attention mask identifying a concept are given by the Boltzmann distributions: p(xja;w)/expf E(x;a;w)gp(ajx;w)/expf E(x;a;w)g (1) Given concept code w, the energy function can be used for both generation and identiﬁcation of a concept implicitly via optimization (see Figure 1): x(a) = argmin xE(x;a;w) a(x) = argmin aE(x;a;w) (2) Samples from distributions in (1) can be generated via stochastic gradient Langevin dynamics, effectively performing stochastic minimization in (2): ~xx(ja;w) =xK;xk=xk 1+ 2rxE(x;a;w) +!k ~aa(jx;w) =aK;ak=ak 1+ 2raE(x;a;w) +!k; !kN(0;) (3) This stochastic optimization procedure is performed during execution time of the algorithm and is reminiscent of the Monte Carlo sampling procedures in prior work on energy-based models . The procedure differs from approaches that use explicit generator functions  or explicit attention mechanisms, such as dot product attention . It is shown in  that ~xand~awill approach samples from posterior distributions pasK7!1 and 7!0. However in practice it is only possible to execute the dynamics for a ﬁnite number of steps (we useK= 10 in all our experiments). This truncated procedure results in samples drawn from a biased distribution, which we call and which may not be equal to p. Similar issues of slow mixing are also present in prior work, which typically uses non-differentiable sampling procedures. In our case, the sampling procedure in equation (3) can be differentiated and can be trained to produce samples close to true distribution p. There are many possible choices for the energy function as long as it is non-negative. The speciﬁc form we use in this work is based on relation network architecture  for its ability to easily capture interactions between pairs of entities E(x;a;w) =f(X t;i;j(ai)(aj)g(xt i;xt j;w);w)2(4) Wherefandgare multi-layer neural networks that each take concept code as part of their input. is the sigmoid function and is used to gate the entity pairs by their attention masks. 34 Learning Concepts from Events To learn concepts from experience grounded in events, we pose a few-shot prediction task. Given a few demonstration examples Xdemocontaining tuples (x;a)and initial state x0for a new event inXtrain, the task is to predict attention aand the future state trajectory x1:Tof the new event. The new event may contain a different conﬁguration or number of entities, so it is not possible to directly transfer attention mask, for instance. To simplify notation, we consider prediction of only one future statex1, although predicting more states is straightforward. The procedure is depicted in Figure 2. x0x1a x0 ?demo event test event x1atest event  Figure 2: Example of a few-shot prediction task we use to learn concept energy functions. We follow the maximum entropy inverse reinforcement learning formulation  and assume demonstrations are samples from the distributions given by the energy function E. Given an inferred concept code w(details discussed below), ﬁnding energy function parameters is posed as as maximum likelihood estimation problem over future state and attention given initial state. The resulting loss for a particular dataset Xis LML p(X;w) =E(x;a)X  logp  x1;ajx0;w (5) Where the joint probability can be decomposed in terms of probabilities in (1) as logp  x1;ajx0;w = logp  x1ja;wx + logp  ajx0;wa ;w= [wx;wa] (6) We use two concept codes, wxandwato specify the joint probability. The interpretation is that wxspeciﬁes the concept of the action that happens in the event (i.e. "be in center of" ) while wa speciﬁes the argument the action happens over (i.e. "square" ). This is a concept structure or syntax that describes the event. The concept codes are interchangeable and same concept code can be used either as action or as an argument because the energy function deﬁning the concept can either be used for generation or identiﬁcation. This importantly allows concepts to be understood from their usage under multiple contexts. Conditioned on the two codes concatenated as w, the two log-likelihood terms in (6) can be approximated as (see Appendix for the derivation) logp  x1ja;wx   E(x1;a;wx) E(~x;a;wx) +~xx(ja;wx) logp  ajx0;wa   E(x0;a;wa) E(x0;~a;wa) +~aa  jx0;wa (7) Where []+= log(1 + exp())is the softplus operator. This form is similar to contrastive divergence  and structured SVM forms  and is a special case of guided cost learning formulation . The approximation comes from sample-based estimates of the partition functions for p(x)andp(a). The above equations make use of truncated and biased gradient-based sampling distributions xand ain (3) to estimate the respective partition functions. Following , the approximation error in these estimates is minimal when KL divergence between biased distribution and true distribution expf Eg=Zis minimized: LKL (X;w) = KL (xjjpx) + KL (ajjpa) =E(x;a)X E(~x;a;wx) +E(x0;~a;wa) + H [x] + H [a] ~xx(ja;wx);~aa  jx0;wa The above equation intuitively encourages sampling distributions to generate samples from lowenergy regions. 4Execution-Time Inference of Concepts Given a set of example events X, the concept codes can be inferred at execution-time via ﬁnding codes wthat minimizeLMLandLKL. Similar to , in this work we only consider positive examples when adapting wand ignore the effect that changing w has on the sampling distribution . The result is simply minimizing the energy functions wrt wover the concept example events w (X) = argmin wE(x;a)X E(x1;a;wx) +E(x0;a;wa) (8) This minimization is similar to execution-time parameter adaptation and the inner update of metalearning approaches . We perform the optimization with stochastic gradient updates similar to equation (3). This approach again implicitly infers codes at execution time via meta-learning using only the energy model as opposed to incorporating additional explicit inference networks. Meta-Level Parameter Optimization We seek probability density functions pthat maximize the likelihood of training data XviaLML pand simultaneously we seek sampling distributions that generate samples from pviaLKL . In inverse reinforcement learning setting of  and , these two objectives correspond to cost and policy function optimization are treated as separate alternating optimization problems because they operate over two different functions. However, in our case both pandare implicitly a functions of the energy model and its parameters , a dependence which we denote asp()and(). Consequently we can pose the problem as a single joint optimization min LML p()(Xtrain;w (Xdemo)) +LKL ()(Xtrain;w (Xdemo)) (9) We solve the above optimization problem via end-to-end backpropagation, differentiation through gradient-based sampling procedures. See Figure 3 for an overview of our procedure and appendix for a detailed algorithm description. wx0x1 x0a x1a opt x0x1aE optconcept inference identification  generation θ demo test test opt  * Figure 3: Execution-time inference in our method and the resulting optimization problems. 5 Experiments The main purpose of our experiments is to investigate 1) whether our single model is able to learn understanding of wide variety of concepts under multiple contexts, 2) the utility of iterative optimization-based inference processes, and 3) ability to reuse learned concepts on different environments and actuation platforms. 5.1 Evaluation Environment and Tasks We wish to evaluate understanding of concepts under multiple contexts generation and identiﬁcation. To the best of our knowledge we are not aware of any existing datasets or environments that simultaneously test both contexts for a wide range of concepts. For example,  tests understanding via question answering, while  focuses on visual concepts. Thus to evaluate our method, we introduce a new simulated environment and tasks which extend the work in . The environment is a two-dimensional scene consisting of a varying collection of entities, each processing position, color, and shape properties. We wanted environment and tasks to be simple enough to facilitate ease of analysis, yet complex enough to lead to formation of a variety of concepts. In this work we focus 5on position-based environment representation, but a pixel-based representation and generation would be an exciting avenue for future work. The task in this environment is, given Ndemonstration events that involve (we use N= 5) that involve identical attention and state changes under different situations, perform analogous behavior underNnovel test situations (by attending to analogous entities and performing analogous state changes). Such behavior is not unique and these may be multiple possible solutions. Because our energy model architecture in section 3 processes all entities independently, the number of entities can vary between events. See Appendix for the description of events we consider in our dataset and sites.google.com/site/energyconceptmodels for video results of our model learning on these events. 5.2 Understanding Concepts in Multiple Contexts An important property of our model is ability to learn from and apply it in both generation and identiﬁcation contexts. We qualitatively observe that the model performs sensible behavior in both contexts. For example, we considered events with proximity relations "closest" and"farthest" and found model able to both attend to entities that are closest or furthest to another entity, and to move an entity to be closest or furthest to another entity as shown in ﬁgure 4. There are multiple admissible solutions which can be generated, as shown by the energy heatmap overlaid. We also wish to understand several other properties of this formulation, which we discuss below. Figure 4: Outcomes of generation (left) and identiﬁcation (right) for the concept of being farthest to cross-shaped entity. Path in left image is the optimization trajectory for the cross entity with the energy heatmap is overlaid. Transfer of learning between generation and identiﬁcation contexts: When our model trained on both contexts it shares experience between contexts. Knowing how to act out a concept should help in identifying it and vice versa an effect observed in humans and other animals . To evaluate the efﬁcacy of transfer, we perform an experiment where we train the energy model only in identiﬁcation context and test the model’s performance in generation context (and conversely and second experiment where we train in generation context and test on identiﬁcation context). Since it is difﬁcult to quantitatively evaluate generative models which have multiple admissible solutions, we have collected a set of events that only involve the task of moving to an absolute location which have unique answer that allows quantitative evaluation. The results of transfer between contexts on this subset of events are reported in ﬁgure 5. We observe that even without explicitly being trained on the appropriate context, the networks perform much better than baseline of two independently-trained networks, though not as effectively as networks that were trained on both contexts. This transfer is advantageous because in many situations demonstrations from only one type of context may be available, which our framework would still be able to integrate. 0.0 2.5 5.0 7.5 10.0 inference iteration0.00.20.40.60.81.0state MSEGeneration 0.0 2.5 5.0 7.5 10.0 inference iteration0.00.10.20.30.40.50.60.7attention cross-entropyRecognition Figure 5: Accuracy of transfer between contexts for an absolute position concept. Red is error of the model trained only in one context (generation or identiﬁcation) evaluated on the opposite context. Green is error of the model trained in both contexts. 6Figure 6: Projected concept codes for color events. redare generation codes wxandblue are attention codes wa.Sharing of concept codes across contexts: Another property of our model is that codes wxandwafor identifying concepts are interchangeable and can be shared between generation and identiﬁcation contexts. For example, either turning an entity red would or identifying all red entities in the scene would ideally use the same concept of"red" . We indeed observe that events which involve recognizing entities of a particular color, the codes wamatch the codes wxfor setting entities to that color (see Figure 6 for the PCA projection of these codes). We ﬁnd similar correlation in the other events as well. Thus we see evidence that a concept code is reused across contexts, similarly to how words in a language are used in multiple contexts. This property presents exciting opportunities in applying our model to grounded language understanding. 5.3 Optimization-Based Inference Another important property of our model is that inference processes are based on iterative stochastic optimization dynamics that build up output over time and may involve non-trivial feedback corrections. In ﬁgure 7 (left), we show examples of the optimization trajectories for generation of different shape concepts. We see that the multi-step processes consist of a number of non-trivial feedback corrections to achieve the appropriate joint arrangement of entities. On the other hand, a single-step processes must achieve the arrangement through a single very precise step. While this can be adequate for simple shapes such as a line, is it problematic for more complex shapes such as the square. In optimization trajectories of attention vectors for identiﬁcation, we observe a mix of outcomes in some cases attention vector is settled on early in the optimization process, but in other cases optimization involves non-trivial feedback corrections as shown in ﬁgure 7 (top right). In optimization of concept codes, we also observe that desired energy landscape forms only after multiple optimization iterations as from in ﬁgure 7 (bottom right). Figure 7: Trajectories of our execution-time inference processes. Left: Generation trajectories for shape concepts (given example shape) trained and executed with 1 optimization step and 20 steps. Top Right: Examples of two attention vector optimization trajectories for identiﬁcation of a line concept. Bottom Right: Examples of energy landscape as woptimization progresses. Effect of a Relational Architecture We ﬁnd that using a relational architecture in our model as in equation 4 complements the optimization-based inference. We considered an alternative energy function that independently operates over individual entities rather than pair of entities, such as E(x;a;w) =f(P t;i(ai)g(xt i;w);w)2. We ﬁnd that concepts that involve a single entity, such as positioning or color concepts are able to be generated and identiﬁed without the use of relation network architecture. However, for concepts that involve coordination of multiple entities such as shape or temporal concepts we observe that not using relation network results in poor samples as shown in "no RN" case of ﬁgure 7. 7Effect of Training with LKLObjective We wish to understand whether it is necessary to explicitly encourage inference process to produce good samples via LKLobjective in equation (8) as it involves a computationally expensive back-propagation through the optimization procedure. Given enough steps, stochastic gradient Langevin dynamics could in theory generate samples from the energy model’s distribution without this explicit objective. However, in our experiments we observe that training without LKLobjective, the gradient-based inference process of equations in (3) is not able to produce good samples in a small number of steps. Sample negative log-likelihoods are signiﬁcantly higher when training without LKLobjective. In ﬁgure 8 we see that while the energy network learns to discriminate between true example events (plotted in green) and sampled and random events (plotted in red and black, respectively) as a result of objectiveLML. However, the network is unable to produce sample events that match energy of examples. On the other hand, the network trained with both objectives LMLandLKLis able to generate samples that match the energies of examples while still being able to discriminate between true example and random events. Figure 8: Energy values from models trained with and without KL objective. Green and positive example events, redare sample events generated by our run-time inference process, and black are random events from the initial distribution. 5.4 Reuse of Concepts between Environments When a concept is learned implicitly (as opposed to generated in a feed-forward manner by a generator function or a policy), it allows the possibility to reuse the concept model under different environments and actuation platforms, provided there can be a mapping between the representations of the two environments. To test generation of concepts in a different environment, we generated similar scenes in a threedimensional physically-based mujoco environment  where the actuation mechanism is joint torques of a robotic arm rather than direct changes to environment state. To generate a concept, we used model-predictive control  as the optimization mechanism and used energy function learned in original environment as a cost for this optimization. Figure 9 shows results of reusing the concepts to reenact behavior of original demonstration to move into a location between two blue entities. Note that we manually deﬁned a correspondence between representations of two environments and do not claim to tackle automatic transfer of representations our aim is to show that learned energy functions are robust to being used under different dynamics, actuation mechanism and control algorithm. demonstration reenactment on robot  Figure 9: Energy function of reaching between blue objects learned from demonstration in 2D particle environment reused in a 3D robot simulator under a novel arrangement. 6 Conclusion We believe that execution-time optimization plays a crucial role in acquisition and generalization of knowledge, planning and abstract reasoning, and communication. In this preliminary work, we proposed energy-based concept models as basic building blocks over which such optimization procedures can fruitfully operate. In the current work we used a simple concept structure, but more complex structure with multiple arguments or recursion would be interesting to investigate in the future. It would also be interesting to test compositionality of concepts, which is very suited to our model as compositions corresponds to the summation of the constituent energy functions. 